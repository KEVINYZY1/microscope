microscope java client 设计指南

###############################################################################
设计指标

客户端需要支持多语言：client需要跟踪java用于和PHP应用
客户端不能影响主程序
客户端不需要保证消息发送的绝对可靠性
客户端能够自动重连接到collector
客户端需要对消息压缩、批量发送
客户端需要封装在框架中
客户端应该能够被开启或者关闭：通过zookeeper实现
客户端在应对大数据的时候应该能够采样
客户端对应用程序的性能消耗应该尽量低
客户端对异步线程需要关联上下文

###############################################################################
设计方案

初期: Queue + Thread + TCP

使用 Jdk Queue 作为消息存储缓冲区；
使用守护线程发送消息；
使用TCP连接collector；

未来：考虑到大量应用的接入：考虑使用kafka作为消息中间件

###############################################################################
实现参考

当客户端的代码被执行的时候，跟踪程序都会相应的被执行；
因此，我们认为：跟踪程序是与线程一致的。

跟踪程序需要保证再一次跟踪中有唯一的跟踪ID。

跟踪程序在跨JVM远程调用时，需要传递跟踪ID。

综上所述：我们实现了microscope java client.